## internal data
library(tidyverse)
xxx <- readxl::read_xlsx("../../15.PostDoc/02.Project/14.HNNKY/Version02/02.data/01.Metadata_v2.xlsx",sheet = 2)
xxx %>% 
  select(CompoundID,Name,Formula,Calc..MW,RT..min.) %>% 
  head(58) %>% 
  distinct() -> compound_meta

sample_meta = tibble(
  SampleID = paste0("Sample",str_pad(c(1:12),2,"left","0")),
  Sample_label_raw = paste(rep(c("case1","case2","case3","control"),each = 3),rep(c(1,2,3),times = 4),sep = " "),
  group = rep(c("case1","case2","case3","control"),each = 3),
  value = c(runif(12,min = 5,max = 20))
)

expmat <- matrix(
  round(runif(50*12,100000,5000000)),nrow = 50,ncol = 12
) %>% as.data.frame() %>% 
  mutate(Compound_ID = compound_meta$CompoundID) %>% 
  relocate(Compound_ID,.before = "V1")



colnames(expmat) = c("Compound_ID",sample_meta$SampleID)

mda_demo_data = list(
  sample_meta = sample_meta,
  compound_meta = compound_meta,
  exp_meta = expmat
)

usethis::use_data(mda_demo_data,internal = T)
library(progress)
golem::run_dev()
library(MDAtoolkits)
library(progressr)
library(tidyverse)
library(purrr)
library(furrr)
xx <- read.table("~/Downloads/xxx.txt",header = T,sep = "\t",quote = NULL)
xxx <- mda_data_org(compound_info = xx,source = "other")
xxxx <- mda_get_cid(xxx)
MDA_run_shiny()


library(tidyverse)
library(webchem)
shawn_get_cid_sh = function(name,mod) {
  a = tibble(
    query = name,
    cid = NA
  )
  tryCatch({
    a = get_cid(
      query = name,
      from = "name",
      domain = "compound",
      match = mod
    )},error = function(e) {
    }
  )
  return(a)
}

xx <- read.delim("~/Downloads/xxx.txt",header = T,sep = "\t")
xxx <- unique(xx$name)
xxxx <- length(xxx)
adddd = list()

for (i in 1:xxxx) {
  adddd[[i]] = shawn_get_cid(name = xxx[i],mod = "all")
  Sys.sleep(0.1)
}

n = xxxx
for (i in 1:n) {
  #   cid_var$a_cid[[i]] = shawn_get_cid_sh(name = cid_var$name[i],mod = cid_var$mod)
  if (i == 1) {
    dat <- shawn_get_cid_sh(name = xxx[1],mod = "all")
  } else {
    dat <- rbind(dat,shawn_get_cid_sh(name = xxx[i],mod = "all"))
  }
}

x_l = bind_rows(adddd) %>% as.data.frame()

xx_10 <- read.table("~/Downloads/name2cid.txt",header = T,sep = "\t")
library(tidyverse)
xx_10 = xx_10 %>% filter(!is.na(cid)) %>% select(cid)
xx_10 = xx_10$cid



c<-read.csv("~/Downloads/df.csv")
library(RColorBrewer)
#pie(c$num,labels = c$class,cex=0.6,edges = 1000,radius =1,clockwise = TRUE,init.angle = 30,
#lty = 1,main = "",col = brewer.pal(12,"Set3"))

#myPalette <- brewer.pal(12, "Set3") 
pie_sum = sum(c$num)
pie_perct = round(c$num/pie_sum,3)*100
pie_labels = paste0(c$class," (",pie_perct,"%)")
#pie_labels[10:length(pie_labels)] = ""
png(filename = "~/Downloads/xxx.png",width = 5000,height = 3500,res = 300)
pdf(file = "~/Downloads/xxx.pdf",width = 40,height = 20)
pie(x = c$num,labels = pie_labels,edges = 1000,radius =2,clockwise = TRUE,init.angle = 30, 
    lty = 1,main = "",col = brewer.pal(12,"Set3"))
dev.off()


inc = c("DJJCXFVJDGTHFX-UHFFFAOYSA-N"
,"CZMRCDWAGMRECN-UGDNZRGBSA-N"
,"RWSXRVCMGQZWBV-WDSKDSINSA-N"
,"LFTYTUAZOPRMMI-CFRASDGPSA-N"
,"LFTYTUAZOPRMMI-MPIASZHXSA-N"
,"DQQDLYVHOTZLOR-OCIMBMBZSA-N"
, "VFRROHXSMXFLSN-SLPGGIOYSA-N")

library(classyfireR)
tmp_list = list()
for (i in 1:7) {
  tryCatch({
    tmp_list[[i]] = shawn_get_classification(inc[i])
  },error = function(e) {})
 # incProgress(1/n,detail = paste0("Classification in processing (",i,"/",n,")"))
  Sys.sleep(0.1)
}

a = data.frame(
  www = c(0:10),
  xxx = paste("A",c(5:15))
)

b = data.frame(
  zzz = c(0:10),
  yyy = paste("A",c(15:25))
)


dplyr::left_join(a,b,c("www" = "zzz"))


step1 <- read.delim("~/Downloads/step1.txt",header = T,sep = "\t")
step2 <- read.delim("~/Downloads/step2.txt",header = T,sep = "\t")
step3 <- read.delim("~/Downloads/step3.txt",header = T,sep = "\t")
step4 <- read.delim("~/Downloads/step4.txt",header = T,sep = "\t")
step5 <- read.delim("~/Downloads/step5.txt",header = T,sep = "\t")

mda_merge_info(orz_data = step1,name2cid = step2,pubchem_detail = step3,pubchem_class = step4,CTS_kegg = step5)
library(tidyverse)
function(orz_data,name2cid,pubchem_detail,pubchem_class,CTS_kegg){
  name2cid$cid = as.character(name2cid$cid)
  pubchem_detail$CID = as.character(pubchem_detail$CID)
  result_out = name2cid %>% 
    left_join(.,pubchem_detail,by = c("cid" = "CID") )%>% 
    left_join(.,pubchem_class,by = c("InChIKey"="InchIkeys")) %>% 
    right_join(.,orz_data,by = c("query" = "name") ) %>% 
    left_join(CTS_kegg,by = c("InChIKey" = "InChIkey")) %>% 
  mutate(
    MolecularWeight = as.numeric(MolecularWeight),
    mw = as.numeric(mw),
    Check_MF = case_when(
      mf == MolecularFormula ~ TRUE,
      TRUE ~ FALSE
    ),
    Check_MW = case_when(
      abs(mw - MolecularWeight) <= 5 ~  TRUE,
      TRUE ~ FALSE
    ),
    High_identical = case_when(
      Check_MF == TRUE & Check_MW == TRUE ~ TRUE,
      TRUE ~ FALSE
    )
  ) %>% 
    distinct() %>% 
    relocate(compound_id,.before = query) %>% 
    as.data.frame()
  MolecularWeight
  return(result_out)
}

merge_var$result_out
set.seed(100)
a  = round(runif(100,3,100))

code = data.frame(
  user = paste0("user",c(1:100)),
  password = paste0("henu",c(85,66,95,63,51,98,51,67,61,95,39,88,47,51,48,63,62,79,57,78,42,53,54,99,45,100,79,53,52,91,29,20,42,55,27,39,59,23,81,65,74,46,59,28,48,19,63,96,49,76, 5,20,65,19,37,21,90,26,99, 5,13,27,73,6,56,69,32,41,74,96,77,59,48,38,40,23,16,41,29,71,43,29,42,22,84,54,41,59,97,66,35,35,94,40,58,53,16,26,73,32))
  
)

write.csv(code,file = "~/15.PostDoc/03.Pepline/code.csv",row.names = F)
